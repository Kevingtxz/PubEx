# Generated by Django 3.1.1 on 2020-09-21 03:06

import base.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0004_auto_20200920_2342'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentaryQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCommentaryQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('commentary_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.commentaryquestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='book',
            name='subject',
            field=models.ManyToManyField(to='base.Subject'),
        ),
        migrations.AlterField(
            model_name='book',
            name='questions',
            field=models.ManyToManyField(to='base.Question'),
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('A', 'Admin'), ('S', 'Student'), ('T', 'Teacher'), ('P', 'Poster'), ('O', 'Owner')], max_length=1)),
                ('standard_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.standarduser')),
            ],
        ),
        migrations.CreateModel(
            name='ReportUniversity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.university')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('standard_user_id', models.IntegerField(primary_key=True, serialize=False, verbose_name=base.models.StandardUser)),
                ('books', models.ManyToManyField(blank=True, to='base.ReportBook')),
                ('commentaries_questions', models.ManyToManyField(blank=True, to='base.ReportCommentaryQuestion')),
                ('questions', models.ManyToManyField(blank=True, to='base.ReportQuestion')),
                ('reporter', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='base.standarduser')),
                ('universities', models.ManyToManyField(blank=True, to='base.ReportUniversity')),
            ],
        ),
        migrations.AddField(
            model_name='reportbook',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.book'),
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('standard_user_id', models.IntegerField(primary_key=True, serialize=False, verbose_name=base.models.StandardUser)),
                ('books', models.ManyToManyField(blank=True, to='base.Book')),
                ('commentaries_questions', models.ManyToManyField(blank=True, to='base.CommentaryQuestion')),
                ('questions', models.ManyToManyField(blank=True, to='base.Question')),
                ('universities', models.ManyToManyField(blank=True, to='base.University')),
            ],
        ),
        migrations.CreateModel(
            name='Commentaries',
            fields=[
                ('standard_user_id', models.IntegerField(primary_key=True, serialize=False, verbose_name=base.models.StandardUser)),
                ('commentaries_questions', models.ManyToManyField(blank=True, to='base.CommentaryQuestion')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='users',
            field=models.ManyToManyField(to='base.UserPermission'),
        ),
        migrations.AddField(
            model_name='question',
            name='users',
            field=models.ManyToManyField(to='base.UserPermission'),
        ),
    ]
